---
import type { CollectionEntry } from 'astro:content';
import type { StandaloneCollections } from '../util/get-static-paths';
import { Languages } from '../util/languages';
import { getCanonicalUrlFn } from '../util/get-canonical-url';

import ContentMeta from './design/ContentMeta.astro';
import CopyButton from './design/CopyButton.astro';
import ShareButton from './design/ShareButton.astro';
import PdfLink from './PdfLink.astro';
import H1 from './design/H1.astro';

interface Props<T extends StandaloneCollections> {
  collection: T;
  entry: CollectionEntry<T>;
  showCopyButton?: boolean;
  showDownloadButton?: boolean;
}

const {
  entry,
  collection,
  showCopyButton = true,
  showDownloadButton = collection !== 'pages',
} = Astro.props;

const canonicalUrl = await getCanonicalUrlFn(collection)(
  entry.data.lang,
  entry.data.identifier,
);
---

<style>
  .german-title {
    display: block;
  }

  .header-meta {
    display: flex;
    justify-content: flex-start;
    gap: var(--bbon-size-gap);
    align-items: baseline;
    flex-wrap: wrap;
    padding-block-end: var(--bbon-size-gap);
    margin-block-end: var(--bbon-size-gap);
    border-block-end: var(--bbon-size-border) solid var(--bbon-color-primary);
  }
</style>

<hgroup>
  {
    entry.data.lang !== `${Languages.GERMAN}` && (
      <span class="german-title ltr">{entry.data.germanTitle}</span>
    )
  }
  <H1>{entry.data.title}</H1>
  <ContentMeta entry={entry} />
</hgroup>

<div class="header-meta">
  <ShareButton
    title={entry.data.title}
    url={canonicalUrl}
  />
  {
    showCopyButton && (
      <CopyButton>
        <h1>{entry.data.title}</h1>
        <br />
        <br />
        <slot />
      </CopyButton>
    )
  }
  {
    showDownloadButton && (
      <PdfLink
        collection={collection}
        identifier={entry.data.identifier}
      />
    )
  }
</div>

<slot />
