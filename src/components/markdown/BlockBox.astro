---
import { type LanguagesValue } from '../../util/languages';
import type { StandaloneCollections } from '../../util/get-static-paths';

import { getCollection } from 'astro:content';
import { useUiTranslation } from '../../util/use-ui-translation';

import Accordion from '../../design/Accordion.astro';

import NotFoundError from '../../design/NotFoundError.astro';
import ContentMetaSection from '../../design/ContentMetaSection.astro';

export interface Props {
  identifier: string;
  lang: LanguagesValue;
  collection?: StandaloneCollections;
}

const {
  identifier,
  lang = Astro.locals.lang,
  collection = 'flyers',
} = Astro.props;

const blockEntries = await getCollection(collection, (block) => {
  return block.slug === `${identifier}/${lang}`;
});

const isPrint = Astro.locals.isPrint;

const title = isPrint
  ? collection !== 'pages'
    ? blockEntries[0]?.data.title
    : undefined
  : `${await useUiTranslation('meta.moreInfoAbout', lang)}: "${blockEntries[0]?.data.title}"`;

const showOnlyLink = !isPrint && collection === 'pages';
---

{
  blockEntries[0] ? (
    showOnlyLink ? (
      <ContentMetaSection
        collection={collection}
        entry={blockEntries[0]}
      />
    ) : (
      <Accordion
        title={title}
        open={true}
      >
        <ContentMetaSection
          collection={collection}
          entry={blockEntries[0]}
        >
          <slot />
        </ContentMetaSection>
      </Accordion>
    )
  ) : (
    <NotFoundError context={`BlockBox/${identifier}/${lang}`} />
  )
}
