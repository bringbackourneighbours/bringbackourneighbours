---
import type { StandaloneCollections } from '../util/get-static-paths';
import { type LanguagesValue } from '../util/languages';
import { getCollection } from 'astro:content';
import MarkdownEntry from '../design/MarkdownEntry.astro';
import NotFoundError from '../design/NotFoundError.astro';

interface Props {
  identifier: string;
  lang: LanguagesValue;
  collection?: StandaloneCollections;
}

const {
  identifier,
  lang = Astro.locals.lang,
  collection = 'blocks',
} = Astro.props;

const blockEntries = await getCollection(collection, (block) => {
  return block.slug === `${identifier}/${lang}`;
});
---

{
  blockEntries[0] ? (
    <MarkdownEntry rendered={blockEntries[0].render()} />
  ) : (
    <NotFoundError context={`${collection}/${identifier}/${lang}`} />
  )
}
