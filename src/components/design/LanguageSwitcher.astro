---
import Card from './Card.astro';
import Icon from './Icon.astro';
import Link from './Link.astro';
import languageIcon from '../../assets/icons/ion--language.svg?raw';
import LanguageChip from './LanguageChip.astro';

import { type LanguagesValue } from '../../util/languages';

interface Props {
  lang: LanguagesValue;
  translationSlugs?: Array<{
    lang: LanguagesValue;
    url: string;
  }>;
}

const { lang = Astro.locals.lang, translationSlugs } = Astro.props;
---

<style>
  .language-switcher {
    z-index: 1000;
    position: fixed;
    inset-inline-end: var(--bbon-size-gap);
    inset-block-end: var(--bbon-size-gap);

    &.-collapsed {
      .language-switcher-alternatives {
        display: none !important;
      }
    }

    .language-switcher-toggle {
      border: none;
      background: none;
      font-family: inherit;

      .language-switcher-toggle-content {
        display: flex;
        gap: var(--bbon-size-gap);

        .language-switcher-toggle-label {
          align-items: center;
          display: flex;
          gap: var(--bbon-size-gap);
        }

        .language-switcher-alternatives {
          align-items: center;
          display: flex;
          flex-wrap: wrap;
          font-size: var(--bbon-size-p);
          gap: var(--bbon-size-gap);
          padding: var(--bbon-size-spacing);

          --bbon-color-primary: var(--bbon-color-surface);
          --bbon-color-primary-bright: var(--bbon-color-surface);
        }
      }
    }
  }
</style>

<nav
  class="language-switcher"
  id="language-switcher"
>
  <button
    id="language-switcher-toggle"
    class="language-switcher-toggle"
  >
    <Card
      size="medium"
      variant="secondary"
    >
      <div class="language-switcher-toggle-content">
        <div class="language-switcher-toggle-label">
          <Icon
            html={languageIcon}
            variant="inverted-secondary"
          />
          <LanguageChip
            lang={lang}
            currentLang={lang}
          />
        </div>
        <div class="language-switcher-alternatives">
          {
            translationSlugs?.map((translation) => (
              <Link
                lang={translation.lang}
                href={translation.url}
              >
                <LanguageChip
                  currentLang={lang}
                  lang={translation.lang}
                />
              </Link>
            ))
          }
        </div>
      </div>
    </Card>
  </button>
</nav>

<script is:inline>
  let expanded = false;

  const languageSwitcher = document.getElementById('language-switcher');
  const languageSwitcherToggle = document.getElementById(
    'language-switcher-toggle',
  );

  const toggle = () => {
    expanded = !expanded;
    setClasses();
  };

  const setClasses = () => {
    if (expanded) {
      languageSwitcher.classList.add('-expanded');
      languageSwitcher.classList.remove('-collapsed');
    } else {
      languageSwitcher.classList.remove('-expanded');
      languageSwitcher.classList.add('-collapsed');
    }
  };

  languageSwitcherToggle.addEventListener('click', toggle);
  setClasses();
</script>
