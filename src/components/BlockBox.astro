---
import { type LanguagesValue } from '../util/languages';
import type { StandaloneCollections } from '../util/get-static-paths';

import { getCollection } from 'astro:content';
import { getCanonicalUrlFn } from '../util/get-canonical-url';
import { useUiTranslation } from '../util/use-ui-translation';

import Accordion from '../design/Accordion.astro';
import InternalShortLink from './InternalShortLink.astro';
import ContentMeta from './ContentMeta.astro';
import NotFoundError from '../design/NotFoundError.astro';
import QrImage from '../design/QrImage.astro';

interface Props {
  identifier: string;
  lang: LanguagesValue;
  collection?: StandaloneCollections;
}

const {
  identifier,
  lang = Astro.locals.lang,
  collection = 'flyers',
} = Astro.props;

const blockEntries = await getCollection(collection, (block) => {
  return block.slug === `${identifier}/${lang}`;
});

const isPrint = Astro.locals.isPrint;

const title = isPrint
  ? blockEntries[0]?.data.title
  : `${await useUiTranslation('meta.moreInfoAbout', lang)}: "${blockEntries[0]?.data.title}"`;

const canonicalUrl = await getCanonicalUrlFn(collection)(lang, identifier);

const collectionLabel =
  collection === 'flyers'
    ? await useUiTranslation('meta.findAlsoInFlyer', lang)
    : await useUiTranslation('meta.findAlsoAsPage', lang);
---

<style>
  .meta-section {
    border-block-start: calc(var(--size-border) * 2) solid var(--color-primary);
    margin-inline: calc(-1 * var(--vspace));
    margin-block-start: var(--vspace);
    padding: var(--vspace);
    padding-block-end: 0;

    &.-is-print {
      border: calc(var(--size-border) * 2) solid var(--color-primary);
      padding: var(--vspace);
      margin: 0;
      display: flex;
      align-items: center;
      gap: var(--vspace);
    }
  }
</style>

{
  blockEntries[0] ? (
    <Accordion title={title}>
      {isPrint && (
        <div class={`meta-section ${isPrint ? ' -is-print' : ''}`}>
          <QrImage
            size="100"
            url={canonicalUrl!}
          />
          <div>
            <p>
              {collectionLabel} <strong>{blockEntries[0].data.title}</strong>
            </p>
            <InternalShortLink identifier={identifier} />
            <ContentMeta entry={blockEntries[0]} />
          </div>
        </div>
      )}
      <slot />
      {!isPrint && (
        <div class="meta-section">
          <div>
            {collectionLabel}
            <InternalShortLink identifier={identifier} />
            <ContentMeta entry={blockEntries[0]} />
          </div>
        </div>
      )}
    </Accordion>
  ) : (
    <NotFoundError context={`BlockBox/${identifier}/${lang}`} />
  )
}
