/* 
* GENERAL STYLES
*/
:root {
  --color-primary: lch(28.229% 58.73 285.304deg);
  --color-primary-dark: color-mix(in lch, var(--color-primary) 80%, black);
  --color-primary-bright: color-mix(in lch, var(--color-primary) 70%, white);
  --color-secondary: lch(55% 90.4 42deg);
  --color-secondary-dark: color-mix(in lch, var(--color-secondary) 58%, black);
  --color-secondary-bright: color-mix(
    in srgb,
    var(--color-secondary) 90%,
    white
  );
  --color-surface: #fff;
  --color-surface-dark: #ededf5d4;
  --color-text: black;
  --space: 1.62;
  --vspace: calc(var(--space) * 1rem);
  --vspace-0: calc(3 * var(--space) * 1rem);
  --vspace-1: calc(2 * var(--space) * 1rem);
  --vspace-2: calc(1.5 * var(--space) * 1rem);
  --vspace-3: calc(0.5 * var(--space) * 1rem);
  --vspace-4: calc(0.25 * var(--space) * 1rem);
  --shadow-0: 10px;
  --size-border: 2px;
  --size-max-text-span: calc(34 * var(--space) * 1rem);
}

html {
  font-size: 14px;
}

body {
  font-size: 1.1667em;
  font-family: FiraGO, sans-serif;
  background: var(--color-surface);
  margin: 0;
  color: var(--color-primary);
}

p,
.p {
  margin: var(--vspace-3) 0;
  line-height: var(--vspace);
}

h1,
h2,
h3,
h4,
h5,
h6,
.h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
  font-weight: 500;
  letter-spacing: -0.02rem;
  word-break: break-word;
}

h2,
h3,
h4,
h5,
h6,
.h2,
.h3,
.h4,
.h5,
.h6 {
  margin: var(--vspace-2) 0 var(--vspace-3) 0;
  line-height: var(--vspace);
}

.h1,
h1 {
  font-size: 2.4167em;
  margin: var(--vspace-1) 0 var(--vspace-3) 0;
  line-height: calc(2.4167 / var(--space) * var(--vspace));
}

.h2,
h2 {
  font-size: 1.7917em;
}

.h3,
h3 {
  font-size: 1.5em;
}

.h4,
h4 {
  font-size: 1.3333em;
}

.h5,
h5 {
  font-size: 1.25em;
}

.h6,
h6 {
  font-size: 1em;
  letter-spacing: 0;
}

blockquote {
  font-size: 1.1667em;
  font-style: italic;
  line-height: calc(1.1667 * var(--vspace));
  margin: var(--vspace-2) var(--vspace-2);
}

/* TODO: Move to printAstro */
@media print {
  header {
    display: none !important;
  }

  h6 + h1 {
    margin-top: 0;
  }
}

.caption {
  font-size: 1.0417em;
  font-weight: normal;
  font-style: italic;
}

.endnote {
  font-size: 1.0417em;
}

.footnote {
  margin: var(--vspace-0) 0 var(--vspace-2) 0;
  font-size: 0.9792em;
  border-top: 1px solid #ccc;
  line-height: 2em;
}

sup {
  font-size: 0.9792rem;
  margin: 0.5em;
  text-transform: none;
  font-style: italic;
  font-weight: normal;
}

dl,
ol,
ul {
  list-style: none;
  margin-top: 0;
  padding-left: 0;
}

ul {
  list-style: disc inside;
  margin-bottom: var(--vspace-2);
}

li {
  line-height: var(--vspace);
  list-style-position: outside;
  margin-left: 1.1em;
  padding-left: 0;
}

.button,
button,
dd,
dt,
li {
  margin-bottom: var(--vspace-4);
}

dl dl,
dl ol,
dl ul,
ol dl,
ol ol,
ol ul,
ul dl,
ul ol,
ul ul {
  margin: var(--vspace-4);
}

/**
* Utility
*/

.hidden {
  display: none !important;
}

.ltr {
  direction: ltr;
}

.rtl {
  direction: rtl;
}

/* Fit To Width Utilities for pdf flyers
https://kizu.dev/fit-to-width/
*/

.text-fit {
  display: flex !important;
  container-type: inline-size;

  --captured-length: initial;
  --support-sentinel: var(--captured-length, 9999px);
  --max-font-size: initial;

  & > [aria-hidden] {
    visibility: hidden;
  }

  & > :not([aria-hidden]) {
    flex-grow: 1;
    container-type: inline-size;

    --captured-length: 100cqi;
    --available-space: var(--captured-length);

    & > * {
      --support-sentinel: inherit;
      --captured-length: 100cqi;
      --ratio: tan(
        atan2(
          var(--available-space),
          var(--available-space) - var(--captured-length)
        )
      );
      --font-size: clamp(
        1em,
        1em * var(--ratio),
        var(--max-font-size, calc(infinity * 1px)) - var(--support-sentinel)
      );

      inline-size: var(--available-space);

      &:not(.text-fit) {
        display: block;
        font-size: var(--font-size);

        @container (inline-size > 0) {
          white-space: nowrap;
        }
      }

      &.text-fit {
        --captured-length2: var(--font-size);

        font-variation-settings: 'opsz' tan(atan2(var(--captured-length2), 1px));
      }
    }
  }
}

@property --captured-length {
  syntax: '<length>';
  initial-value: 0;
  inherits: true;
}

@property --captured-length2 {
  syntax: '<length>';
  initial-value: 0;
  inherits: true;
}
