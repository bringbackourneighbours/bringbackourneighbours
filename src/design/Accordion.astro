---
import { type ColorVariants, invertColorVariant } from '../util/color-variants';

import Icon from './Icon.astro';
import chevronDown from '../assets/icons/ion--chevron-down.svg?raw';
import Heading from './Heading.astro';

interface Props {
  title?: string;
  variant?: ColorVariants;
  open?: boolean;
  level?: 1 | 2 | 3 | 4 | 5;
}
const isPrint = Astro.locals.isPrint;

const { title, variant = 'primary', open = isPrint, level = 3 } = Astro.props;
---

<style>
  .-primary {
    --accordion-border-color: var(--bbon-color-primary);
  }

  .-inverted-primary {
    --accordion-background-color: var(--bbon-color-primary);
    --accordion-summary-color: var(--bbon-color-primary);
  }

  .-secondary {
    --accordion-border-color: var(--bbon-color-secondary);
  }

  .-inverted-secondary {
    --accordion-background-color: var(--bbon-color-secondary);
    --accordion-summary-color: var(--bbon-color-secondary);
  }

  .-primary,
  .-secondary {
    --accordion-background-color: var(--bbon-color-surface);
    --accordion-summary-color: var(--bbon-color-surface);
    --accordion-padding: var(--bbon-size-gap);
    --accordion-content-color: var(--accordion-border-color);
  }

  .-inverted-primary,
  .-inverted-secondary {
    --accordion-border-color: var(--bbon-color-surface-dark);
    --accordion-padding: var(--bbon-size-spacing);
    --accordion-max-width: fit-content;
    --accordion-content-color: var(--accordion-background-color);
  }

  .-primary,
  .-secondary,
  .-inverted-primary,
  .-inverted-secondary {
    --accordion-border-width: var(--bbon-size-border);
  }

  .-is-print {
    &.-primary,
    &.-inverted-primary {
      --accordion-content-color: var(--bbon-color-primary);
      --accordion-summary-color: var(--bbon-color-primary);
    }

    &.-secondary,
    &.-inverted-secondary {
      --accordion-content-color: var(--bbon-color-secondary);
      --accordion-summary-color: var(--bbon-color-secondary);
    }

    --accordion-border-color: var(--bbon-color-surface);
    --accordion-background-color: var(--bbon-color-surface);
    --accordion-padding: 0;
    --accordion-border-width: 0;
  }

  details {
    border: var(--accordion-border-width) solid var(--accordion-border-color);
    max-width: var(--accordion-max-width);
    margin: var(--bbon-size-spacing) 0;

    summary {
      padding: 0 var(--accordion-padding);
      list-style: none;
      background-color: var(--accordion-border-color);
      color: var(--accordion-summary-color);
      display: flex;
      align-items: center;
      justify-content: space-between;
      gap: var(--bbon-size-gap);
      break-after: avoid;
      break-inside: avoid;

      .icons {
        display: flex;
      }
    }

    /* accordions can be nested... but the styles will cascade */
    /* stylelint-disable no-descending-specificity */

    &[open] {
      summary {
        .icons {
          .chevron-icon {
            transform: rotate(180deg);
          }
        }
      }
    }

    article {
      padding: var(--accordion-padding);
      color: var(--accordion-content-color);

      --bbon-color-primary: var(--accordion-content-color);

      details {
        .icons {
          .chevron-icon {
            /* accordions can be nested... but the styles will cascade */
            transform: unset !important;
          }
        }

        &[open] {
          .icons {
            .chevron-icon {
              /* accordions can be nested... but the styles will cascade */
              transform: rotate(180deg) !important;
            }
          }
        }
      }
    }

    /* stylelint-enable no-descending-specificity */
  }
</style>

<details
  open={open}
  class={`-${variant}${isPrint ? ' -is-print' : ''}`}
>
  <summary>
    {
      Astro.slots.has('summary') ? (
        <slot name="summary" />
      ) : (
        <Heading level={level}>{title}</Heading>
      )
    }
    {
      !isPrint && (
        <span class="icons">
          {Astro.slots.has('extra-icon') && (
            <span class="extra-icon">
              <slot name="extra-icon" />
            </span>
          )}
          <span class="chevron-icon">
            <Icon
              variant={invertColorVariant(variant)}
              html={chevronDown}
            />
          </span>
        </span>
      )
    }
  </summary>
  <article>
    <slot />
  </article>
</details>
