---
import { type LanguagesValue } from '../util/languages';

interface Props {
  href?: string;
  lang?: LanguagesValue;
}

const { href = '', lang = Astro.locals.lang } = Astro.props;

// FIXME Only replace from beginning of string
const site = Astro.site!.toString();
const pretty_print = href
  .replace('mailto:', '')
  .replace('https://', '')
  .replace('http://', '');
const pretty_screen = href
  .replace('mailto:', '')
  .replace(site, '')
  .replace('https://', '')
  .replace('http://', '');
---

<style>
  a {
    color: var(--color-primary);
    text-decoration: underline;
    overflow-wrap: break-word;
  }

  a:active {
    color: var(--color-secondary);
  }

  a:visited {
    color: var(--color-primary-bright);
  }

  @media print {
    a {
      text-decoration: none;
      font-weight: bold;
    }

    a:active {
      color: var(--color-primary);
    }

    a:visited {
      color: var(--color-primary);
    }
  }
</style>
<a
  href={href}
  hreflang={lang}
>
  <slot />
  {
    !Astro.slots.has('default') &&
      (Astro.locals.isPrint ? (
        <span> {pretty_print} </span>
      ) : (
        <span> {pretty_screen} </span>
      ))
  }
</a>
