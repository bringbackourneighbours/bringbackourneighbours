---
import Card from './Card.astro';
import Icon from './Icon.astro';
import Link from './Link.astro';
import languageIcon from '../assets/icons/ion--language.svg?raw';
import { type LanguagesValue } from '../util/languages';
import { useUiTranslation } from '../util/use-ui-translation';

interface Props {
  lang: LanguagesValue;
  translationSlugs?: Array<{
    lang: LanguagesValue;
    url: string;
  }>;
}

const { lang = Astro.locals.lang, translationSlugs } = Astro.props;
---

<style>
  .language-switcher {
    z-index: 1000;
    position: fixed;
    inset-inline-start: var(--vspace);
    inset-block-end: var(--vspace);

    &.-collapsed {
      .language-switcher-alternatives {
        display: none !important;
      }
    }

    .language-switcher-toggle {
      border: none;
      background: none;
      font-family: inherit;

      .language-switcher-toggle-content {
        align-items: flex-end;
        display: flex;
        gap: var(--vspace);

        .language-switcher-toggle-label {
          align-items: center;
          display: flex;
          gap: var(--vspace);
        }

        .language-switcher-alternatives {
          align-items: center;
          display: flex;
          flex-wrap: wrap;
          font-size: 1rem;
          gap: var(--vspace);
          padding: var(--vspace-4);

          --color-primary: var(--color-surface);
          --color-primary-bright: var(--color-surface);
        }
      }
    }
  }
</style>

<nav
  class="language-switcher"
  id="language-switcher"
>
  <button
    id="language-switcher-toggle"
    class="language-switcher-toggle"
  >
    <Card
      size="h3"
      variant="secondary"
      smaller
    >
      <div class="language-switcher-toggle-content">
        <div class="language-switcher-toggle-label">
          <Icon html={languageIcon} />
          {useUiTranslation(`languages.${lang}`, lang)}
        </div>
        <div class="language-switcher-alternatives">
          {
            translationSlugs?.map((translation) => (
              <Link
                lang={translation.lang}
                href={translation.url}
              >
                {useUiTranslation(
                  `languages.${translation.lang}`,
                  translation.lang,
                )}
                ({useUiTranslation(`languages.${translation.lang}`, lang)})
              </Link>
            ))
          }
        </div>
      </div>
    </Card>
  </button>
</nav>

<script is:inline>
  let expanded = false;

  const languageSwitcher = document.getElementById('language-switcher');
  const languageSwitcherToggle = document.getElementById(
    'language-switcher-toggle',
  );

  const toggle = () => {
    expanded = !expanded;
    setClasses();
  };

  const setClasses = () => {
    if (expanded) {
      languageSwitcher.classList.add('-expanded');
      languageSwitcher.classList.remove('-collapsed');
    } else {
      languageSwitcher.classList.remove('-expanded');
      languageSwitcher.classList.add('-collapsed');
    }
  };

  languageSwitcherToggle.addEventListener('click', toggle);
  setClasses();
</script>
