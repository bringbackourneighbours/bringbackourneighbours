---
import type { CollectionEntry } from 'astro:content';
import { getStaticPathsForPages } from '../../../../util/get-static-paths';
import { redirectNotTranslatedForPage } from '../../../../util/redirect-not-found-or-not-translated';
import MarkdownEntry from '../../../../design/MarkdownEntry.astro';
import ContentLayout from '../../../../layouts/ContentLayout.astro';
import { getTranslationsUrlsForPages } from '../../../../util/get-translations-url';
import { getCanonicalUrlToPage } from '../../../../util/get-canonical-url';
import LanguageSwitcher from '../../../../design/LanguageSwitcher.astro';
import TableOfContents from '../../../../design/TableOfContents.astro';

interface Props {
  entry: CollectionEntry<'pages'>;
}

export async function getStaticPaths() {
  return getStaticPathsForPages();
}

const { entry } = Astro.props;

const redirectResponse = await redirectNotTranslatedForPage(entry);

if (redirectResponse) {
  return Astro.redirect(redirectResponse.url, redirectResponse.status);
}

const translationSlugs = await getTranslationsUrlsForPages(
  entry.data.lang,
  entry.data.identifier,
);
---

<ContentLayout
  lang={entry.data.lang}
  title={entry.data.title}
  canonicalSlug={await getCanonicalUrlToPage(
    entry.data.lang,
    entry.data.identifier,
  )}
  translationSlugs={translationSlugs}
>
  <LanguageSwitcher
    lang={entry.data.lang}
    translationSlugs={translationSlugs}
  />
  <h1>{entry.data.title}</h1>
  <!--FIXME: and more meta data here-->
  <TableOfContents rendered={entry.render()} />
  <MarkdownEntry rendered={entry.render()} />
</ContentLayout>
