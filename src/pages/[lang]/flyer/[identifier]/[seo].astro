---
import { type CollectionEntry } from 'astro:content';
import MarkdownEntry from '../../../../design/MarkdownEntry.astro';
import ContentLayout from '../../../../layouts/ContentLayout.astro';
import { getCanonicalUrlToFlyer } from '../../../../util/get-canonical-url';
import { getStaticPathsForFlyers } from '../../../../util/get-static-paths';
import { getTranslationsUrlsForFlyer } from '../../../../util/get-translations-url';
import { redirectNotTranslatedForFlyer } from '../../../../util/redirect-not-found-or-not-translated';
import { useUiTranslation } from '../../../../util/use-ui-translation';

interface Props {
  entry: CollectionEntry<'flyers'>;
}

export async function getStaticPaths() {
  return getStaticPathsForFlyers();
}

const { entry } = Astro.props;

const redirectResponse = await redirectNotTranslatedForFlyer(entry);
if (redirectResponse) {
  return Astro.redirect(redirectResponse.url, redirectResponse.status);
}
---

<ContentLayout
  lang={entry.data.lang}
  title={entry.data.title}
  canonicalSlug={await getCanonicalUrlToFlyer(
    entry.data.lang,
    entry.data.identifier,
  )}
  translationSlugs={await getTranslationsUrlsForFlyer(
    entry.data.lang,
    entry.data.identifier,
  )}
>
  <hgroup>
    <h1>{entry.data.title}</h1>
    <!-- FIXME: Element ul is not allowed here -->
    <ul class="meta semantic-list">
      <li>
        {useUiTranslation('meta.updated', entry.data.lang)}
        <time datetime={entry.data.lastChecked.toISOString()}
          >{entry.data.lastChecked.toLocaleDateString(entry.data.lang)}</time
        >
      </li>
    </ul>
  </hgroup>
  <MarkdownEntry rendered={entry.render()} />
</ContentLayout>
