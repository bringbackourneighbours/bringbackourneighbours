---
import type { CollectionEntry } from 'astro:content';

import Block from '../../../../components/markdown/Block.astro';
import ContentHeading from '../../../../components/ContentHeading.astro';
import ContentLayout from '../../../../layouts/ContentLayout.astro';
import LanguageSwitcher from '../../../../design/LanguageSwitcher.astro';

import { getCanonicalUrlToFlyer } from '../../../../util/get-canonical-url';
import { getStaticPathsForFlyers } from '../../../../util/get-static-paths';
import { getTranslationsUrlsForFlyer } from '../../../../util/get-translations-url';
import { redirectNotTranslatedForFlyer } from '../../../../util/redirect-not-found-or-not-translated';

interface Props {
  entry: CollectionEntry<'flyers'>;
}

export async function getStaticPaths() {
  return getStaticPathsForFlyers();
}

const { entry } = Astro.props;

const redirectResponse = await redirectNotTranslatedForFlyer(entry);
if (redirectResponse) {
  return Astro.redirect(redirectResponse.url, redirectResponse.status);
}

const translationSlugs = await getTranslationsUrlsForFlyer(
  entry.data.lang,
  entry.data.identifier,
);

const canonicalUrl = await getCanonicalUrlToFlyer(
  entry.data.lang,
  entry.data.identifier,
);
---

<ContentLayout
  lang={entry.data.lang}
  title={entry.data.title}
  canonicalSlug={canonicalUrl}
  translationSlugs={translationSlugs}
>
  <LanguageSwitcher
    lang={entry.data.lang}
    translationSlugs={translationSlugs}
  />

  <ContentHeading
    entry={entry}
    collection="flyers"
  >
    <Block
      identifier={entry.data.identifier}
      collection="flyers"
      isRootLevelContent={true}
    />
  </ContentHeading>
</ContentLayout>
