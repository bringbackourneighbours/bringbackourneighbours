---
import { type CollectionEntry } from 'astro:content';

import Block from '../../../../components/Block.astro';
import ContentHeading from '../../../../components/ContentHeading.astro';
import ContentLayout from '../../../../layouts/ContentLayout.astro';
import LanguageSwitcher from '../../../../design/LanguageSwitcher.astro';
import TableOfContents from '../../../../design/TableOfContents.astro';

import { getCanonicalUrlToKit } from '../../../../util/get-canonical-url';
import { getStaticPathsForKits } from '../../../../util/get-static-paths';
import { getTranslationsUrlsForKit } from '../../../../util/get-translations-url';
import { redirectNotTranslatedForKit } from '../../../../util/redirect-not-found-or-not-translated';

interface Props {
  entry: CollectionEntry<'kits'>;
}

export async function getStaticPaths() {
  return getStaticPathsForKits();
}

const { entry } = Astro.props;

const redirectResponse = await redirectNotTranslatedForKit(entry);
if (redirectResponse) {
  return Astro.redirect(redirectResponse.url, redirectResponse.status);
}

const translationSlugs = await getTranslationsUrlsForKit(
  entry.data.lang,
  entry.data.identifier,
);
---

<ContentLayout
  lang={entry.data.lang}
  title={entry.data.title}
  canonicalSlug={await getCanonicalUrlToKit(
    entry.data.lang,
    entry.data.identifier,
  )}
  translationSlugs={translationSlugs}
>
  <LanguageSwitcher
    lang={entry.data.lang}
    translationSlugs={translationSlugs}
  />
  <ContentHeading
    entry={entry}
    collection="kits"
  />
  <TableOfContents rendered={entry.render()} />

  <Block
    identifier={entry.data.identifier}
    collection="kits"
  /></ContentLayout
>
