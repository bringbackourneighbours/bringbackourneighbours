---
import { type CollectionEntry } from 'astro:content';
import MarkdownEntry from '../../../../design/MarkdownEntry.astro';
import ContentLayout from '../../../../layouts/ContentLayout.astro';
import { getCanonicalUrlToKit } from '../../../../util/get-canonical-url';
import { getStaticPathsForKits } from '../../../../util/get-static-paths';
import { getTranslationsUrlsForKit } from '../../../../util/get-translations-url';
import { redirectNotTranslatedForKit } from '../../../../util/redirect-not-found-or-not-translated';
import Timestamp from '../../../../design/Timestamp.astro';
import LanguageSwitcher from '../../../../design/LanguageSwitcher.astro';
import TableOfContents from '../../../../design/TableOfContents.astro';

interface Props {
  entry: CollectionEntry<'kits'>;
}

export async function getStaticPaths() {
  return getStaticPathsForKits();
}

const { entry } = Astro.props;

const redirectResponse = await redirectNotTranslatedForKit(entry);
if (redirectResponse) {
  return Astro.redirect(redirectResponse.url, redirectResponse.status);
}

const translationSlugs = await getTranslationsUrlsForKit(
  entry.data.lang,
  entry.data.identifier,
);
---

<ContentLayout
  lang={entry.data.lang}
  title={entry.data.title}
  canonicalSlug={await getCanonicalUrlToKit(
    entry.data.lang,
    entry.data.identifier,
  )}
  translationSlugs={translationSlugs}
>
  <LanguageSwitcher
    lang={entry.data.lang}
    translationSlugs={translationSlugs}
  />
  <hgroup>
    <h1>{entry.data.title}</h1>
    <!-- FIXME: Element ul is not allowed here -->
    <ul class="meta semantic-list">
      <li>{entry.data.lang} â€“ {entry.data.germanTitle}</li>
      <li>
        <Timestamp entry={entry} />
      </li>
    </ul>
  </hgroup>

  <TableOfContents rendered={entry.render()} />

  <MarkdownEntry rendered={entry.render()} />
</ContentLayout>
