---
import { type CollectionEntry } from 'astro:content';

import Imprint from '../../design/Imprint.astro';
import Link from '../../design/Link.astro';
import Logo from '../../design/Logo.astro';
import MarkdownEntry from '../../design/MarkdownEntry.astro';
import PrintLayout from '../../layouts/PrintLayout.astro';
import PrinterPage from '../../design/PrinterPage.astro';
import QrImage from '../../design/QrImage.astro';
import Timestamp from '../../design/Timestamp.astro';
import { Languages } from '../../util/languages';
import { getCanonicalUrlToFlyer } from '../../util/get-canonical-url';
import { getStaticPathsForFlyers } from '../../util/get-static-paths';
import { getTranslationsUrlsForFlyer } from '../../util/get-translations-url';
import { useUiTranslation } from '../../util/use-ui-translation';

interface Props {
  entry: CollectionEntry<'flyers'>;
}

export async function getStaticPaths() {
  return getStaticPathsForFlyers();
}

const { entry } = Astro.props;

const translationSlugs = await getTranslationsUrlsForFlyer(
  entry.data.lang,
  entry.data.identifier,
);

// FIXME: this should be the SHORTURL and not the canonical
const canonicalUrl =
  (await getCanonicalUrlToFlyer(entry.data.lang, entry.data.identifier)) || '';
---

<style>
  .cover-page {
    aside {
      color: white;
      background: var(--color-primary);
      position: absolute;
      inset-inline-start: 0;
      inset-block-start: 0;
      display: block;
      font-variant: small-caps;
      padding: 0.5em;
      font-size: 1.2em;
      font-weight: 700;
    }

    hgroup {
      margin-top: 20vh;
      font-size: 18px;

      h1 {
        line-height: 1em;
      }
    }

    footer {
      display: flex;
      gap: 0.5cm;

      h3 {
        display: inline-block;
        font-variant: small-caps;
        margin: 0;
      }

      p {
        margin-block-start: 1mm;
        display: inline-block;
      }

      .container {
        width: 9.5cm;
      }
    }
  }

  .end-footer {
    position: absolute;

    /*
    every flyer has 4 pages, so the footer needs to be somewhere on the bottom of page 4...
    calc would need to consider the page margins */
    inset-block-start: 69cm;

    .find-translation {
      display: flex;
      align-items: center;
      gap: var(--vspace);

      ul {
        margin: 0;
      }
    }
  }
</style>
<PrintLayout
  lang={entry.data.lang}
  title={'PDF ' + entry.data.title + ' | BringBackOurNeighbours'}
>
  <PrinterPage>
    <div class="cover-page">
      <aside>
        {useUiTranslation(`languages.${entry.data.lang}`, entry.data.lang)}
        {
          entry.data.lang != 'de' && (
            <span>
              |
              {useUiTranslation(
                `languages.${entry.data.lang}`,
                Languages.GERMAN,
              )}
            </span>
          )
        }
      </aside>
      <hgroup>
        {entry.data.lang != 'de' && <h6>{entry.data.germanTitle}</h6>}
        <h1>{entry.data.title}</h1>
      </hgroup>
      <footer>
        <Logo size="11mm" />
        <div class="container">
          <h3 id="title">Bring Back Our Neighbours</h3>
          <p id="subtitle">
            {useUiTranslation('meta.subtitle', entry.data.lang)}
          </p>
        </div>
      </footer>
    </div>
  </PrinterPage>
  <PrinterPage breakBefore={true}>
    <MarkdownEntry rendered={entry.render()} />

    <div class="end-footer">
      <div class="find-translation">
        <QrImage url={canonicalUrl} />
        <ul>
          {
            translationSlugs.map(async (translationSlug) => (
              <li>
                <Link href={translationSlug.url}>
                  {useUiTranslation(
                    `languages.findTranslation`,
                    translationSlug.lang,
                  )}
                </Link>
              </li>
            ))
          }
        </ul>
      </div>
      <p>
        <Link href={canonicalUrl} />
      </p>
      <p>
        <Imprint lang={entry.data.lang} />
      </p>
      <p>
        <Timestamp entry={entry} />
      </p>
    </div>
  </PrinterPage>

  <script>
    const fitText = function (el: HTMLElement, factor: number) {
      const fit = function (el: HTMLElement) {
        const resizer = function () {
          const par = el.parentElement!.getBoundingClientRect().width * 0.95;
          const own = el.getBoundingClientRect().width;
          el.style.fontSize = par / own / factor + 'cm';
        };

        // Call once to set.
        resizer();

        // Bind events
        window.addEventListener('resize', resizer, false);
        window.addEventListener('orientationchange', resizer, false);
      };

      fit(el);

      // return set of elements
      return el;
    };
    fitText(document.getElementById('subtitle')!, 3.05);
    fitText(document.getElementById('title')!, 2.05);
  </script>
</PrintLayout>
