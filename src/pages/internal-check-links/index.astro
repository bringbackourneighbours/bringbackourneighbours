---
import { type CollectionEntry, getCollection } from 'astro:content';
import { linkUrl } from '../../../astro.config.mjs';

import BaseLayout from '../../layouts/BaseLayout.astro';
import Link from '../../components/design/Link.astro';

import { getAllExternalLinksEntries } from '../../util/get-flat-links-entries';

const linkEntries = await getAllExternalLinksEntries();

const adresses: CollectionEntry<'addresses'>[] =
  await getCollection('addresses');
---

<BaseLayout
  title="INTERNAL LINK CHECK"
  seo=""
  lang="de"
  allowIndexing={false}
>
  <h1>BBON Short Links</h1>
  Auf all diese Links verweisen wir mit der Kurz-Url <code>{linkUrl}</code>. Um
  sie alle zu checken kann man das tool <a
    href="https://github.com/JustinBeckwith/linkinator">linkinator</a
  > nutzen:

  <pre>
  ‚ùØ npx linkinator --redirects=error {Astro.site}internal-check-links
  </pre>

  <h2>Externe Links</h2>

  <table>
    <thead>
      <tr>
        <th>slug</th>
        <th>filePath</th>
        <th>url</th>
      </tr>
    </thead>
    <tbody>
      {
        linkEntries.map((entry) => (
          <tr>
            <td>{entry.slug}</td>
            <td>{entry.filePath}</td>
            <td>
              <Link href={entry.url}> {entry.url}</Link>
            </td>
          </tr>
        ))
      }
    </tbody>
  </table>
  <h2>Adress Links</h2>

  <table>
    <thead>
      <tr>
        <th>id</th>
        <th>filePath</th>
        <th>url</th>
      </tr>
    </thead>
    <tbody>
      {
        adresses
          .filter((address) => address.data.url)
          .map((entry) => (
            <tr>
              <td>{entry.id}</td>
              <td>{entry.filePath}</td>
              <td>
                <Link href={entry.data.url}> {entry.data.url}</Link>
              </td>
            </tr>
          ))
      }
    </tbody>
  </table>
</BaseLayout>
